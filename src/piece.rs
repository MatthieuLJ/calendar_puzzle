pub struct OrientedPiece {
    pub pattern: [[char; 5]; 5],
    pub top_index: u8,
}

pub struct Piece {
    pub id: char,
    pub possible_pieces: Vec<OrientedPiece>,
}

pub fn get_piece(id: char) -> Option<Piece> {
    let mut result = Piece {
        id,
        possible_pieces: vec![],
    };

    match id {
        't' => {
            result.possible_pieces = vec![
                OrientedPiece {
                    pattern: [
                        ['t', 't', 't', '0', '0'],
                        ['0', 't', '0', '0', '0'],
                        ['0', 't', '0', '0', '0'],
                        ['0', '0', '0', '0', '0'],
                        ['0', '0', '0', '0', '0'],
                    ],
                    top_index: 0,
                },
                OrientedPiece {
                    pattern: [
                        ['t', '0', '0', '0', '0'],
                        ['t', 't', 't', '0', '0'],
                        ['t', '0', '0', '0', '0'],
                        ['0', '0', '0', '0', '0'],
                        ['0', '0', '0', '0', '0'],
                    ],
                    top_index: 0,
                },
                OrientedPiece {
                    pattern: [
                        ['0', 't', '0', '0', '0'],
                        ['0', 't', '0', '0', '0'],
                        ['t', 't', 't', '0', '0'],
                        ['0', '0', '0', '0', '0'],
                        ['0', '0', '0', '0', '0'],
                    ],
                    top_index: 1,
                },
                OrientedPiece {
                    pattern: [
                        ['0', '0', 't', '0', '0'],
                        ['t', 't', 't', '0', '0'],
                        ['0', '0', 't', '0', '0'],
                        ['0', '0', '0', '0', '0'],
                        ['0', '0', '0', '0', '0'],
                    ],
                    top_index: 2,
                },
            ];
        }
        'u' => {
            result.possible_pieces = vec![
                OrientedPiece {
                    pattern: [
                        ['u', '0', 'u', '0', '0'],
                        ['u', '0', 'u', '0', '0'],
                        ['u', 'u', 'u', '0', '0'],
                        ['0', '0', '0', '0', '0'],
                        ['0', '0', '0', '0', '0'],
                    ],
                    top_index: 0,
                },
                OrientedPiece {
                    pattern: [
                        ['u', 'u', 'u', '0', '0'],
                        ['u', '0', '0', '0', '0'],
                        ['u', 'u', 'u', '0', '0'],
                        ['0', '0', '0', '0', '0'],
                        ['0', '0', '0', '0', '0'],
                    ],
                    top_index: 0,
                },
                OrientedPiece {
                    pattern: [
                        ['u', 'u', 'u', '0', '0'],
                        ['u', '0', 'u', '0', '0'],
                        ['u', '0', 'u', '0', '0'],
                        ['0', '0', '0', '0', '0'],
                        ['0', '0', '0', '0', '0'],
                    ],
                    top_index: 0,
                },
                OrientedPiece {
                    pattern: [
                        ['u', 'u', 'u', '0', '0'],
                        ['0', '0', 'u', '0', '0'],
                        ['u', 'u', 'u', '0', '0'],
                        ['0', '0', '0', '0', '0'],
                        ['0', '0', '0', '0', '0'],
                    ],
                    top_index: 0,
                },
            ];
        }
        'z' => {
            result.possible_pieces = vec![
                OrientedPiece {
                    pattern: [
                        ['z', 'z', '0', '0', '0'],
                        ['0', 'z', '0', '0', '0'],
                        ['0', 'z', 'z', '0', '0'],
                        ['0', '0', '0', '0', '0'],
                        ['0', '0', '0', '0', '0'],
                    ],
                    top_index: 0,
                },
                OrientedPiece {
                    pattern: [
                        ['0', '0', 'z', '0', '0'],
                        ['z', 'z', 'z', '0', '0'],
                        ['z', '0', '0', '0', '0'],
                        ['0', '0', '0', '0', '0'],
                        ['0', '0', '0', '0', '0'],
                    ],
                    top_index: 2,
                },
            ];
        }
        'i' => {
            result.possible_pieces = vec![
                OrientedPiece {
                    pattern: [
                        ['i', '0', '0', '0', '0'],
                        ['i', '0', '0', '0', '0'],
                        ['i', '0', '0', '0', '0'],
                        ['i', '0', '0', '0', '0'],
                        ['i', '0', '0', '0', '0'],
                    ],
                    top_index: 0,
                },
                OrientedPiece {
                    pattern: [
                        ['i', 'i', 'i', 'i', 'i'],
                        ['0', '0', '0', '0', '0'],
                        ['0', '0', '0', '0', '0'],
                        ['0', '0', '0', '0', '0'],
                        ['0', '0', '0', '0', '0'],
                    ],
                    top_index: 0,
                },
            ];
        }
        'y' => {
            result.possible_pieces = vec![
                OrientedPiece {
                    pattern: [
                        ['0', 'y', '0', '0', '0'],
                        ['y', 'y', '0', '0', '0'],
                        ['0', 'y', '0', '0', '0'],
                        ['0', 'y', '0', '0', '0'],
                        ['0', '0', '0', '0', '0'],
                    ],
                    top_index: 1,
                },
                OrientedPiece {
                    pattern: [
                        ['0', '0', 'y', '0', '0'],
                        ['y', 'y', 'y', 'y', '0'],
                        ['0', '0', '0', '0', '0'],
                        ['0', '0', '0', '0', '0'],
                        ['0', '0', '0', '0', '0'],
                    ],
                    top_index: 2,
                },
                OrientedPiece {
                    pattern: [
                        ['y', '0', '0', '0', '0'],
                        ['y', '0', '0', '0', '0'],
                        ['y', 'y', '0', '0', '0'],
                        ['y', '0', '0', '0', '0'],
                        ['0', '0', '0', '0', '0'],
                    ],
                    top_index: 0,
                },
                OrientedPiece {
                    pattern: [
                        ['y', 'y', 'y', 'y', '0'],
                        ['0', 'y', '0', '0', '0'],
                        ['0', '0', '0', '0', '0'],
                        ['0', '0', '0', '0', '0'],
                        ['0', '0', '0', '0', '0'],
                    ],
                    top_index: 0,
                }
            ];
        }
        'l' => {
            result.possible_pieces = vec![
                OrientedPiece {
                    pattern: [
                        ['l', 'l', '0', '0', '0'],
                        ['0', 'l', '0', '0', '0'],
                        ['0', 'l', '0', '0', '0'],
                        ['0', 'l', '0', '0', '0'],
                        ['0', '0', '0', '0', '0'],
                    ],
                    top_index: 0,
                },
                OrientedPiece {
                    pattern: [
                        ['0', '0', '0', 'l', '0'],
                        ['l', 'l', 'l', 'l', '0'],
                        ['0', '0', '0', '0', '0'],
                        ['0', '0', '0', '0', '0'],
                        ['0', '0', '0', '0', '0'],
                    ],
                    top_index: 3,
                },
                OrientedPiece {
                    pattern: [
                        ['l', '0', '0', '0', '0'],
                        ['l', '0', '0', '0', '0'],
                        ['l', '0', '0', '0', '0'],
                        ['l', 'l', '0', '0', '0'],
                        ['0', '0', '0', '0', '0'],
                    ],
                    top_index: 0,
                },
                OrientedPiece {
                    pattern: [
                        ['l', 'l', 'l', 'l', '0'],
                        ['l', '0', '0', '0', '0'],
                        ['0', '0', '0', '0', '0'],
                        ['0', '0', '0', '0', '0'],
                        ['0', '0', '0', '0', '0'],
                    ],
                    top_index: 0,
                }
            ]
        }
        'j' => {
            result.possible_pieces = vec![
                OrientedPiece {
                    pattern: [
                        ['j', '0', '0', '0', '0'],
                        ['j', 'j', '0', '0', '0'],
                        ['0', 'j', '0', '0', '0'],
                        ['0', 'j', '0', '0', '0'],
                        ['0', '0', '0', '0', '0'],
                    ],
                    top_index: 0,
                },
                OrientedPiece {
                    pattern: [
                        ['0', '0', 'j', 'j', '0'],
                        ['j', 'j', 'j', '0', '0'],
                        ['0', '0', '0', '0', '0'],
                        ['0', '0', '0', '0', '0'],
                        ['0', '0', '0', '0', '0'],
                    ],
                    top_index: 2,
                },
                OrientedPiece {
                    pattern: [
                        ['j', '0', '0', '0', '0'],
                        ['j', '0', '0', '0', '0'],
                        ['j', 'j', '0', '0', '0'],
                        ['0', 'j', '0', '0', '0'],
                        ['0', '0', '0', '0', '0'],
                    ],
                    top_index: 0,
                },
                OrientedPiece {
                    pattern: [
                        ['0', 'j', 'j', 'j', '0'],
                        ['j', 'j', '0', '0', '0'],
                        ['0', '0', '0', '0', '0'],
                        ['0', '0', '0', '0', '0'],
                        ['0', '0', '0', '0', '0'],
                    ],
                    top_index: 1,
                }
            ]
        }
        'v' => {
            result.possible_pieces = vec![
                OrientedPiece {
                    pattern: [
                        ['v', 'v', 'v', '0', '0'],
                        ['v', '0', '0', '0', '0'],
                        ['v', '0', '0', '0', '0'],
                        ['0', '0', '0', '0', '0'],
                        ['0', '0', '0', '0', '0'],
                    ],
                    top_index: 0,
                },
                OrientedPiece {
                    pattern: [
                        ['v', 'v', 'v', '0', '0'],
                        ['0', '0', 'v', '0', '0'],
                        ['0', '0', 'v', '0', '0'],
                        ['0', '0', '0', '0', '0'],
                        ['0', '0', '0', '0', '0'],
                    ],
                    top_index: 0,
                },
                OrientedPiece {
                    pattern: [
                        ['0', '0', 'v', '0', '0'],
                        ['0', '0', 'v', '0', '0'],
                        ['v', 'v', 'v', '0', '0'],
                        ['0', '0', '0', '0', '0'],
                        ['0', '0', '0', '0', '0'],
                    ],
                    top_index: 2,
                },
                OrientedPiece {
                    pattern: [
                        ['v', '0', '0', '0', '0'],
                        ['v', '0', '0', '0', '0'],
                        ['v', 'v', 'v', '0', '0'],
                        ['0', '0', '0', '0', '0'],
                        ['0', '0', '0', '0', '0'],
                    ],
                    top_index: 0,
                }
            ]
        }
        'q' => {
            result.possible_pieces = vec![
                OrientedPiece {
                    pattern: [
                        ['q', '0', '0', '0', '0'],
                        ['q', 'q', '0', '0', '0'],
                        ['q', 'q', '0', '0', '0'],
                        ['0', '0', '0', '0', '0'],
                        ['0', '0', '0', '0', '0'],
                    ],
                    top_index: 0,
                },
                OrientedPiece {
                    pattern: [
                        ['q', 'q', 'q', '0', '0'],
                        ['q', 'q', '0', '0', '0'],
                        ['q', '0', '0', '0', '0'],
                        ['0', '0', '0', '0', '0'],
                        ['0', '0', '0', '0', '0'],
                    ],
                    top_index: 0,
                },
                OrientedPiece {
                    pattern: [
                        ['q', 'q', '0', '0', '0'],
                        ['q', 'q', '0', '0', '0'],
                        ['0', 'q', '0', '0', '0'],
                        ['0', '0', '0', '0', '0'],
                        ['0', '0', '0', '0', '0'],
                    ],
                    top_index: 0,
                },
                OrientedPiece {
                    pattern: [
                        ['0', 'q', 'q', '0', '0'],
                        ['q', 'q', 'q', '0', '0'],
                        ['0', '0', '0', '0', '0'],
                        ['0', '0', '0', '0', '0'],
                        ['0', '0', '0', '0', '0'],
                    ],
                    top_index: 1,
                }
            ]
        }
        'f' => {
            result.possible_pieces = vec![
                OrientedPiece {
                    pattern: [
                        ['0', 'f', '0', '0', '0'],
                        ['0', 'f', 'f', '0', '0'],
                        ['f', 'f', '0', '0', '0'],
                        ['0', '0', '0', '0', '0'],
                        ['0', '0', '0', '0', '0'],
                    ],
                    top_index: 1,
                },
                OrientedPiece {
                    pattern: [
                        ['f', '0', '0', '0', '0'],
                        ['f', 'f', 'f', '0', '0'],
                        ['0', 'f', '0', '0', '0'],
                        ['0', '0', '0', '0', '0'],
                        ['0', '0', '0', '0', '0'],
                    ],
                    top_index: 0,
                },
                OrientedPiece {
                    pattern: [
                        ['0', 'f', 'f', '0', '0'],
                        ['f', 'f', '0', '0', '0'],
                        ['0', 'f', '0', '0', '0'],
                        ['0', '0', '0', '0', '0'],
                        ['0', '0', '0', '0', '0'],
                    ],
                    top_index: 1,
                },
                OrientedPiece {
                    pattern: [
                        ['0', 'f', '0', '0', '0'],
                        ['f', 'f', 'f', '0', '0'],
                        ['0', '0', 'f', '0', '0'],
                        ['0', '0', '0', '0', '0'],
                        ['0', '0', '0', '0', '0'],
                    ],
                    top_index: 1,
                },
            ]
        }
        _ => {
            return None;
        }
    }
    Some(result)
}
